{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","handleNextClick","maxPosition","stepSize","isLastCheck","infinite","setState","handlePrevClick","this","props","images","step","frameSize","itemWidth","animationDuration","length","className","style","width","map","image","i","transform","transition","src","alt","type","disabled","onClick","React","Component","Form","updateStateInput","updateStateCheckBox","htmlFor","id","name","defaultValue","onChange","event","currentTarget","value","eventCheck","checked","App","Error","isChecked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c38b2a2e.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  position: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  handleNextClick = (\n    position: number,\n    maxPosition: number,\n    stepSize: number,\n    isLastCheck: boolean,\n    infinite: boolean,\n  ) => {\n    if (isLastCheck) {\n      this.setState({\n        position: maxPosition,\n      });\n    } else {\n      this.setState(state => ({\n        position: state.position - stepSize,\n      }));\n    }\n\n    if (infinite && position === maxPosition) {\n      this.setState({\n        position: 0,\n      });\n    }\n  };\n\n  handlePrevClick = (\n    position: number,\n    maxPosition: number,\n    stepSize: number,\n    infinite: boolean,\n  ) => {\n    if (this.state.position + (stepSize) >= 0) {\n      this.setState({\n        position: 0,\n      });\n    } else {\n      this.setState(state => ({\n        position: state.position + (stepSize),\n      }));\n    }\n\n    if (infinite && position + stepSize === stepSize) {\n      this.setState({\n        position: maxPosition,\n      });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n\n    const maxPosition = -itemWidth * (images.length - frameSize);\n\n    const stepSize = step * itemWidth;\n\n    const isLastCheck = position - (step * itemWidth) <= maxPosition;\n\n    return (\n      <div\n        className=\"Carousel Carousel--margin\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n        >\n          {images.map((image, i) => (\n            <li\n              key={image}\n              className=\"Carousel__list-item\"\n              style={{\n                transform: `translateX(${position}px)`,\n                transition: `transform ${animationDuration}ms`,\n              }}\n            >\n              <img\n                src={image}\n                alt={`Emoji-${i + 1}`}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__btn-container\">\n          <button\n            className=\"Carousel__btn\"\n            type=\"button\"\n            disabled={!infinite && position === 0}\n            onClick={() => {\n              this.handlePrevClick(position, maxPosition, stepSize, infinite);\n            }}\n          >\n            Prev\n          </button>\n\n          <button\n            className=\"Carousel__btn\"\n            type=\"button\"\n            disabled={!infinite && position === maxPosition}\n            data-cy=\"next\"\n            onClick={() => {\n              this.handleNextClick(\n                position, maxPosition, stepSize, isLastCheck, infinite,\n              );\n            }}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './Form.scss';\n\ntype Props = {\n  updateStateInput: (value: number, name: string) => void,\n  updateStateCheckBox: (isChecked: boolean) => void,\n};\n\nexport const Form: React.FC<Props> = ({\n  updateStateInput,\n  updateStateCheckBox,\n}) => (\n  <form className=\"Form\">\n    <label\n      className=\"Form__label\"\n      htmlFor=\"stepId\"\n    >\n      Step:\n      <input\n        className=\"Form__input\"\n        id=\"stepId\"\n        name=\"step\"\n        type=\"number\"\n        defaultValue={3}\n        onChange={(event) => {\n          updateStateInput(\n            +event.currentTarget.value,\n            event.currentTarget.name,\n          );\n        }}\n      />\n    </label>\n\n    <label\n      className=\"Form__label\"\n      htmlFor=\"frameId\"\n    >\n      Frame size:\n      <input\n        className=\"Form__input\"\n        id=\"frameId\"\n        name=\"frameSize\"\n        type=\"number\"\n        defaultValue={3}\n        onChange={(event) => {\n          updateStateInput(\n            +event.currentTarget.value,\n            event.currentTarget.name,\n          );\n        }}\n      />\n    </label>\n\n    <label\n      className=\"Form__label\"\n      htmlFor=\"itemId\"\n    >\n      Item width:\n      <input\n        className=\"Form__input\"\n        id=\"itemId\"\n        name=\"itemWidth\"\n        type=\"number\"\n        defaultValue={130}\n        onChange={(event) => {\n          updateStateInput(\n            +event.currentTarget.value,\n            event.currentTarget.name,\n          );\n        }}\n      />\n    </label>\n\n    <label\n      className=\"Form__label\"\n      htmlFor=\"durationId\"\n    >\n      Animation duration:\n      <input\n        className=\"Form__input\"\n        id=\"durationIdId\"\n        name=\"animationDuration\"\n        type=\"number\"\n        defaultValue={1000}\n        onChange={(event) => {\n          updateStateInput(\n            +event.currentTarget.value,\n            event.currentTarget.name,\n          );\n        }}\n      />\n    </label>\n\n    <label\n      className=\"Form__label\"\n      htmlFor=\"infiniteId\"\n    >\n      Infinite:\n      <input\n        className=\"Form__checkbox\"\n        id=\"infiniteId\"\n        name=\"duration\"\n        type=\"checkbox\"\n        onChange={(eventCheck) => {\n          updateStateCheckBox(eventCheck.currentTarget.checked);\n        }}\n      />\n    </label>\n  </form>\n);\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel/Carousel';\nimport { Form } from './components/Form/Form';\n\nexport interface State {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  updateStateInput = (value: number, name: string) => {\n    switch (name) {\n      case 'step':\n        this.setState({\n          step: value,\n        });\n        break;\n\n      case 'frameSize':\n        this.setState({\n          frameSize: value,\n        });\n        break;\n\n      case 'itemWidth':\n        this.setState({\n          itemWidth: value,\n        });\n        break;\n\n      case 'animationDuration':\n        this.setState({\n          animationDuration: value,\n        });\n        break;\n\n      default:\n        throw new Error('Name not found');\n    }\n  };\n\n  updateStateCheckBox = (isChecked: boolean) => {\n    this.setState({\n      infinite: isChecked,\n    });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          className=\"App__title\"\n          data-cy=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <Form\n          updateStateInput={this.updateStateInput}\n          updateStateCheckBox={this.updateStateCheckBox}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}